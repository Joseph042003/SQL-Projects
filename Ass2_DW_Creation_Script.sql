--Task 1.1
DROP SEQUENCE SEQ_A2ERROREVENT; 
CREATE SEQUENCE SEQ_A2ERROREVENT;
DROP TABLE A2ERROREVENT;
CREATE TABLE A2ERROREVENT(
    ERRORID INTEGER, 
    SOURCE_ROWID ROWID,
    SOURCE_TABLE VARCHAR2(30),
    ERRORCODE INTEGER,
    FILTERID INTEGER,
    DATETIME DATE,
    ACTION VARCHAR2(6),
    CONSTRAINT ERROREVENTACTION CHECK (ACTION IN ('SKIP','MODIFY'))
);
/
--Task 1.2
DROP SEQUENCE SEQ_DWPROD; 
CREATE SEQUENCE SEQ_DWPROD; 
DROP SEQUENCE SEQ_DWCUST; 
CREATE SEQUENCE SEQ_DWCUST; 
DROP SEQUENCE SEQ_DWSALE; 
CREATE SEQUENCE SEQ_DWSALE;

DROP TABLE DWSALE;
DROP TABLE DWPROD;
DROP TABLE DWCUST;
DROP TABLE GENDERSPELLING;

CREATE TABLE DWPROD(
    DWPRODID INTEGER PRIMARY KEY,
    DWSOURCETABLE VARCHAR2(30),
    DWSOURCEID INTEGER,
    PRODNAME VARCHAR2(100),
    PRODCATNAME VARCHAR2(100),
    PRODMANUNAME VARCHAR2(100),
    PRODSHIPNAME VARCHAR2(100)
);
/
CREATE TABLE DWCUST(
    DWCUSTID INTEGER PRIMARY KEY, 
    DWSOURCEIDBRIS INTEGER,
    DWSOURCEIDMELB INTEGER,
    FIRSTNAME VARCHAR2(50),
    SURNAME VARCHAR2(50),
    GENDER VARCHAR2(10),
    PHONE VARCHAR2(20),
    POSTCODE VARCHAR2(10),
    CITY VARCHAR2(50),
    STATE VARCHAR2(50),
    CUSTCATNAME VARCHAR2(50)
);
/

CREATE TABLE DWSALE(
    DWSALEID NUMBER PRIMARY KEY,
    DWCUSTID NUMBER,
    DWPRODID NUMBER,
    DWSOURCEIDBRIS NUMBER,
    DWSOURCEIDMELB NUMBER,
    QTY NUMBER (2),
    SALE_DWDATEID INTEGER,
    SHIP_DWDATEID INTEGER,
    SALEPRICE NUMBER (7,2)
);
/
--Task 1.3
CREATE TABLE GENDERSPELLING(InvalidValue VARCHAR2(10), NewValue VARCHAR2(1)); 
INSERT INTO GENDERSPELLING VALUES('MAIL', 'M'); 
INSERT INTO GENDERSPELLING VALUES('WOMAN', 'F'); 
INSERT INTO GENDERSPELLING VALUES('FEM', 'F'); 
INSERT INTO GENDERSPELLING VALUES('FEMALE', 'F'); 
INSERT INTO GENDERSPELLING VALUES('MALE', 'M'); 
INSERT INTO GENDERSPELLING VALUES('GENTLEMAN', 'M'); 
INSERT INTO GENDERSPELLING VALUES('MM', 'M');
INSERT INTO GENDERSPELLING VALUES('FF', 'F'); 
INSERT INTO GENDERSPELLING VALUES('FEMAIL', 'F'); 
/
--Task 2.1
INSERT INTO A2ERROREVENT(ERRORID,SOURCE_ROWID,SOURCE_TABLE,ERRORCODE,FILTERID,DATETIME,ACTION) 
    SELECT SEQ_A2ERROREVENT.NEXTVAL, ROWID, 'A2PRODUCT', 116, 1, SYSDATE, 'SKIP'
    FROM A2PRODUCT P
    WHERE P.PRODNAME IS NULL;
COMMIT;
/
--Task 2.2
INSERT INTO A2ERROREVENT(ERRORID,SOURCE_ROWID,SOURCE_TABLE,ERRORCODE,FILTERID,DATETIME,ACTION)
    SELECT SEQ_A2ERROREVENT.NEXTVAL, ROWID, 'A2PRODUCT', 129, 2, SYSDATE, 'MODIFY'
    FROM A2PRODUCT P
    WHERE p.manufacturercode IS NULL;
COMMIT;
/
--Task 2.3
INSERT INTO A2ERROREVENT(ERRORID,SOURCE_ROWID,SOURCE_TABLE,ERRORCODE,FILTERID,DATETIME,ACTION) 
    SELECT SEQ_A2ERROREVENT.NEXTVAL, ROWID, 'A2PRODUCT', 141, 3, SYSDATE, 'MODIFY' 
    FROM A2PRODUCT P 
    WHERE P.PRODCATEGORY IS NULL OR P.PRODCATEGORY NOT IN (SELECT PC.PRODUCTCATEGORY FROM A2PRODCATEGORY PC);
COMMIT;
/
--SELECT * FROM A2PRODUCT
--SELECT * FROM A2PRODCATEGORY
--SELECT * FROM A2MANUFACTURER
--SELECT * FROM A2SHIPPING
--Task 2.4.3
INSERT INTO DWPROD
    SELECT SEQ_DWPROD.NEXTVAL, 'A2PRODUCT', PRODID, PRODNAME, CATEGORYNAME, MANUNAME, DESCRIPTION
    FROM A2PRODUCT P 
    NATURAL JOIN A2MANUFACTURER M, A2SHIPPING S, A2PRODCATEGORY PC
    WHERE P.ROWID NOT IN (SELECT EE.SOURCE_ROWID FROM A2ERROREVENT EE)AND 
    PC.PRODUCTCATEGORY =  P.PRODCATEGORY AND
    M.MANUCODE = P.MANUFACTURERCODE AND 
    S.SHIPPINGCODE = P.SHIPPINGCODE;
COMMIT;
/
--Task 2.4.4
INSERT INTO DWPROD
    SELECT SEQ_DWPROD.NEXTVAL, 'A2PRODUCT', PRODID, PRODNAME, CATEGORYNAME, 'UNKNOWN', DESCRIPTION  
    FROM A2PRODUCT P
    NATURAL JOIN  A2PRODCATEGORY PC, A2SHIPPING S
    WHERE P.ROWID IN (SELECT EE.SOURCE_ROWID FROM A2ERROREVENT EE WHERE EE.FILTERID = 2) AND 
    PC.PRODUCTCATEGORY =  P.PRODCATEGORY AND
    S.SHIPPINGCODE = P.SHIPPINGCODE ;
COMMIT;
/
--Task 2.4.5
INSERT INTO DWPROD 
    SELECT SEQ_DWPROD.NEXTVAL, 'A2PRODUCT', PRODID, PRODNAME,'UNKNOWN', MANUNAME, DESCRIPTION  
    FROM A2PRODUCT P 
    NATURAL JOIN A2MANUFACTURER M, A2SHIPPING S
    WHERE P.ROWID IN (SELECT EE.SOURCE_ROWID FROM A2ERROREVENT EE WHERE EE.FILTERID = 3) AND
    M.MANUCODE = P.MANUFACTURERCODE AND
    S.SHIPPINGCODE = P.SHIPPINGCODE;
COMMIT;
/
--Task 3.1
--SELECT * FROM A2CUSTBRIS
--SELECT* FROM A2CUSTCATEGORY
--SELECT * FROM A2CUSTMELB
INSERT INTO A2ERROREVENT(ERRORID ,SOURCE_ROWID ,SOURCE_TABLE,ERRORCODE ,FILTERID ,DATETIME ,ACTION)
    SELECT SEQ_A2ERROREVENT.NEXTVAL, ROWID, 'A2CUSTBRIS', 168, 4, SYSDATE, 'MODIFY'
    FROM A2CUSTBRIS CB
    WHERE CB.CUSTCATCODE NOT IN (SELECT CUSTCATCODE FROM A2CUSTCATEGORY) OR CB.CUSTCATCODE IS NULL;
COMMIT;
/
--Task 3.2
INSERT INTO A2ERROREVENT(ERRORID ,SOURCE_ROWID ,SOURCE_TABLE,ERRORCODE ,FILTERID ,DATETIME ,ACTION)
    SELECT SEQ_A2ERROREVENT.NEXTVAL, ROWID, 'A2CUSTBRIS', 196, 5, SYSDATE, 'MODIFY'
    FROM A2CUSTBRIS CB
    WHERE CB.PHONE LIKE '% %' OR CB.PHONE LIKE '%-%';
COMMIT;
/
--Task 3.3
INSERT INTO A2ERROREVENT(ERRORID ,SOURCE_ROWID ,SOURCE_TABLE,ERRORCODE ,FILTERID ,DATETIME ,ACTION)
    SELECT SEQ_A2ERROREVENT.NEXTVAL, ROWID, 'A2CUSTBRIS', 204, 6, SYSDATE, 'SKIP'
    FROM A2CUSTBRIS CB
    WHERE LENGTH(REPLACE(REPLACE(CB.PHONE, ' ', ''), '-', '')) != 10;  
COMMIT; 
--Task 3.4
INSERT INTO A2ERROREVENT(ERRORID ,SOURCE_ROWID ,SOURCE_TABLE,ERRORCODE ,FILTERID ,DATETIME ,ACTION)
    SELECT SEQ_A2ERROREVENT.NEXTVAL, ROWID, 'A2CUSTBRIS', 231, 7, SYSDATE, 'MODIFY'
    FROM A2CUSTBRIS CB
    WHERE UPPER(CB.GENDER) NOT IN ('M', 'F') OR CB.GENDER IS NULL; 
COMMIT;
/
--Task 3.5.1
INSERT INTO DWCUST (DWCUSTID, DWSOURCEIDBRIS, FIRSTNAME, SURNAME, GENDER, PHONE, POSTCODE, CITY, STATE, CUSTCATNAME)
    SELECT SEQ_DWCUST.NEXTVAL,CUSTID,FNAME,SNAME,UPPER(GENDER),PHONE,POSTCODE,CITY,STATE,CUSTCATNAME    
    FROM A2CUSTBRIS CB
    NATURAL JOIN A2CUSTCATEGORY CC
    WHERE CB.ROWID NOT IN (SELECT EE.SOURCE_ROWID FROM A2ERROREVENT EE);
COMMIT; 
/
--Task 3.5.2
INSERT INTO DWCUST (DWCUSTID, DWSOURCEIDBRIS, FIRSTNAME, SURNAME, GENDER, PHONE, POSTCODE, CITY, STATE, CUSTCATNAME)
    SELECT SEQ_DWCUST.NEXTVAL,CUSTID,FNAME,SNAME,UPPER(GENDER),PHONE,POSTCODE,CITY,STATE, 'UNKNOWN'    
    FROM A2CUSTBRIS CB
    WHERE CB.ROWID IN (SELECT EE.SOURCE_ROWID FROM A2ERROREVENT EE WHERE EE.FILTERID = 4);
COMMIT;
/
--TASK 3.5.3
INSERT INTO DWCUST (DWCUSTID, DWSOURCEIDBRIS, FIRSTNAME, SURNAME, GENDER, PHONE, POSTCODE, CITY, STATE, CUSTCATNAME)
    SELECT SEQ_DWCUST.NEXTVAL,CUSTID,FNAME,SNAME,UPPER(GENDER),REPLACE(REPLACE(PHONE,' ', ''),'-', ''),POSTCODE,CITY,STATE,CUSTCATNAME 
    FROM A2CUSTBRIS CB
    NATURAL JOIN A2CUSTCATEGORY CC
    WHERE CB.ROWID IN (SELECT EE.SOURCE_ROWID FROM A2ERROREVENT EE WHERE EE.FILTERID = 5);
COMMIT;
/
--TASK 3.5.4
INSERT INTO DWCUST (DWCUSTID, DWSOURCEIDBRIS, FIRSTNAME, SURNAME, GENDER, PHONE, POSTCODE, CITY, STATE, CUSTCATNAME)
    SELECT SEQ_DWCUST.NEXTVAL,CUSTID,FNAME,SNAME,
    CASE WHEN UPPER(CB.GENDER) IN (SELECT InValidValue FROM GENDERSPELLING)
                                                        THEN (SELECT NewValue FROM GENDERSPELLING GS WHERE UPPER(CB.GENDER) = GS.InValidValue)
                                                        ELSE 'U'
                                                        END,
    PHONE,POSTCODE,CITY,STATE,CUSTCATNAME 
    FROM A2CUSTBRIS CB
    NATURAL JOIN A2CUSTCATEGORY CC
    WHERE CB.ROWID IN (SELECT EE.SOURCE_ROWID FROM A2ERROREVENT EE WHERE EE.FILTERID = 7);
COMMIT;
/
-- TASK 4.1
--SELECT * FROM DWCUST
--SELECT * FROM A2CUSTMELB
--SELECT * FROM A2CUSTCATEGORY
MERGE INTO DWCUST DC
USING(SELECT * FROM A2CUSTMELB A2CM
        INNER JOIN A2CUSTCATEGORY A2CC
        ON A2CM.CUSTCATCODE = A2CC.CUSTCATCODE)CM
ON(DC.FIRSTNAME = CM.FNAME AND 
    DC.SURNAME = CM.SNAME AND 
    DC.POSTCODE = CM.POSTCODE)
        WHEN MATCHED THEN UPDATE SET DC.DWSOURCEIDMELB = CM.CUSTID
        WHEN NOT MATCHED THEN INSERT (DWCUSTID, DWSOURCEIDMELB, FIRSTNAME, SURNAME, GENDER, PHONE, POSTCODE, CITY, STATE, CUSTCATNAME)
            VALUES (SEQ_DWCUST.NEXTVAL, CM.CUSTID, CM.FNAME, CM.SNAME, UPPER(CM.GENDER), CM.PHONE, CM.POSTCODE, CM.CITY, CM.STATE, CM.CUSTCATNAME);
/
--TASK 5.1
--SELECT * FROM A2SALEBRIS
--SELECT * FROM DWPROD
--SELECT * FROM DWCUST
INSERT INTO A2ERROREVENT(ERRORID,SOURCE_ROWID,SOURCE_TABLE,ERRORCODE,FILTERID,DATETIME,ACTION)
    SELECT SEQ_A2ERROREVENT.NEXTVAL, ROWID, 'A2SALEBRIS', 247, 8, SYSDATE, 'SKIP'
    FROM A2SALEBRIS SB
    WHERE SB.PRODID NOT IN (SELECT DWSOURCEID FROM DWPROD) OR SB.PRODID IS NULL;
COMMIT; 
/
--TASK 5.2 
/*INSERT INTO A2ERROREVENT(ERRORID,SOURCE_ROWID,SOURCE_TABLE,ERRORCODE,FILTERID,DATETIME,ACTION)
    SELECT SEQ_A2ERROREVENT.NEXTVAL, ROWID, 'A2SALESBRIS', 272, 9, SYSDATE, 'SKIP' 
    FROM A2SALEBRIS SB
    WHERE NOT EXISTS 
        (SELECT NULL FROM DWCUST 
            WHERE SB.CUSTID = DWCUST.DWSOURCEIDBRIS);
COMMIT; 
*/
INSERT INTO A2ERROREVENT(ERRORID,SOURCE_ROWID,SOURCE_TABLE,ERRORCODE,FILTERID,DATETIME,ACTION)
    SELECT SEQ_A2ERROREVENT.NEXTVAL, SB.ROWID, 'A2SALEBRIS',272, 9, SYSDATE, 'SKIP' 
    FROM A2SALEBRIS SB
    LEFT JOIN DWCUST ON SB.CUSTID = DWCUST.DWSOURCEIDBRIS
    WHERE DWCUST.DWSOURCEIDBRIS IS NULL;
COMMIT;

/ 
--TASK 5.3
INSERT INTO A2ERROREVENT(ERRORID,SOURCE_ROWID,SOURCE_TABLE,ERRORCODE,FILTERID,DATETIME,ACTION)
    SELECT SEQ_A2ERROREVENT.NEXTVAL, ROWID, 'A2SALESBRIS', 294, 10, SYSDATE, 'MODIFY' 
    FROM A2SALEBRIS SB
    WHERE SB.SHIPDATE < SB.SALEDATE ;
COMMIT;
--TASK 5.4
INSERT INTO A2ERROREVENT(ERRORID,SOURCE_ROWID,SOURCE_TABLE,ERRORCODE,FILTERID,DATETIME,ACTION)
    SELECT SEQ_A2ERROREVENT.NEXTVAL, ROWID, 'A2SALESBRIS', 317, 11, SYSDATE, 'MODIFY' 
    FROM A2SALEBRIS SB
    WHERE SB.UNITPRICE IS NULL;
COMMIT;
/
--TASK 5.5
INSERT INTO DWSALE (DWSALEID, DWCUSTID, DWPRODID, DWSOURCEIDBRIS, QTY, SALE_DWDATEID, SHIP_DWDATEID, SALEPRICE)
    SELECT SEQ_DWSALE.NEXTVAL, DC.DWCUSTID, DP.DWPRODID, SB.SALEID, SB.QTY, D1.DATEKEY, D2.DATEKEY, SB.UNITPRICE 
    FROM A2SALEBRIS SB
    INNER JOIN DWCUST DC ON SB.CUSTID = DC.DWSOURCEIDBRIS 
    INNER JOIN DWPROD DP ON SB.PRODID = DP.DWSOURCEID
    INNER JOIN DWDATE D1 ON SB.SALEDATE = D1.DATEVALUE
    INNER JOIN DWDATE D2 ON SB.SHIPDATE = D2.DATEVALUE
    WHERE SB.ROWID NOT IN (SELECT EE.SOURCE_ROWID FROM A2ERROREVENT EE);
COMMIT;
--TASK 5.6
INSERT INTO DWSALE (DWSALEID, DWCUSTID, DWPRODID, DWSOURCEIDBRIS, QTY, SALE_DWDATEID, SHIP_DWDATEID, SALEPRICE)
    SELECT SEQ_DWSALE.NEXTVAL, DC.DWCUSTID, DP.DWPRODID, SB.SALEID, SB.QTY, D1.DATEKEY, D2.DATEKEY, SB.UNITPRICE 
    FROM A2SALEBRIS SB
    INNER JOIN DWCUST DC ON SB.CUSTID = DC.DWSOURCEIDBRIS 
    INNER JOIN DWPROD DP ON SB.PRODID = DP.DWSOURCEID
    INNER JOIN DWDATE D1 ON SB.SALEDATE = D1.DATEVALUE
    INNER JOIN DWDATE D2 ON (SB.SALEDATE + 2) = D2.DATEVALUE
    WHERE SB.ROWID IN (SELECT EE.SOURCE_ROWID FROM A2ERROREVENT EE WHERE EE.FILTERID = 10);
COMMIT;
--TASK 5.7
INSERT INTO DWSALE (DWSALEID, DWCUSTID, DWPRODID, DWSOURCEIDBRIS, QTY, SALE_DWDATEID, SHIP_DWDATEID, SALEPRICE)
    SELECT SEQ_DWSALE.NEXTVAL, DC.DWCUSTID, DP.DWPRODID, SB.SALEID, SB.QTY, D1.DATEKEY, D2.DATEKEY,
    (SELECT MAX (A2SB.UNITPRICE) FROM A2SALEBRIS A2SB WHERE A2SB.PRODID = SB.PRODID) AS SALEPRICE 
    FROM A2SALEBRIS SB
    INNER JOIN DWCUST DC ON SB.CUSTID = DC.DWSOURCEIDBRIS 
    INNER JOIN DWPROD DP ON SB.PRODID = DP.DWSOURCEID
    INNER JOIN DWDATE D1 ON SB.SALEDATE = D1.DATEVALUE
    INNER JOIN DWDATE D2 ON SB.SHIPDATE = D2.DATEVALUE
    WHERE SB.ROWID IN (SELECT EE.SOURCE_ROWID FROM A2ERROREVENT EE WHERE EE.FILTERID = 11);
COMMIT;

--TASK 6.1
INSERT INTO A2ERROREVENT(ERRORID,SOURCE_ROWID,SOURCE_TABLE,ERRORCODE,FILTERID,DATETIME,ACTION)
    SELECT SEQ_A2ERROREVENT.NEXTVAL, ROWID, 'A2SALEMELB', 325, 12, SYSDATE, 'SKIP'
    FROM A2SALEMELB SM
    WHERE SM.PRODID NOT IN (SELECT DWSOURCEID FROM DWPROD) OR SM.PRODID IS NULL;
COMMIT;
/
--TASK 6.2
INSERT INTO A2ERROREVENT(ERRORID,SOURCE_ROWID,SOURCE_TABLE,ERRORCODE,FILTERID,DATETIME,ACTION)
    SELECT SEQ_A2ERROREVENT.NEXTVAL, SM.ROWID, 'A2SALEMELB', 346, 13, SYSDATE, 'SKIP'
    FROM A2SALEMELB SM
    LEFT JOIN DWCUST 
    ON SM.CUSTID = DWCUST.DWSOURCEIDMELB
    WHERE DWCUST.DWSOURCEIDMELB IS NULL;
COMMIT;
--TASK 6.3
INSERT INTO A2ERROREVENT(ERRORID,SOURCE_ROWID,SOURCE_TABLE,ERRORCODE,FILTERID,DATETIME,ACTION)
    SELECT SEQ_A2ERROREVENT.NEXTVAL, ROWID, 'A2SALEMELB', 379, 14, SYSDATE, 'MODIFY'
    FROM A2SALEMELB SM
    WHERE SM.SHIPDATE < SM.SALEDATE;
COMMIT;
--TASK 6.4
INSERT INTO A2ERROREVENT(ERRORID,SOURCE_ROWID,SOURCE_TABLE,ERRORCODE,FILTERID,DATETIME,ACTION)
    SELECT SEQ_A2ERROREVENT.NEXTVAL, ROWID, 'A2SALEMELB', 391, 15, SYSDATE, 'MODIFY'
    FROM A2SALEMELB SM
    WHERE SM.UNITPRICE IS NULL;
COMMIT;
--TASK 6.5
INSERT INTO DWSALE (DWSALEID, DWCUSTID, DWPRODID, DWSOURCEIDMELB, QTY, SALE_DWDATEID ,SHIP_DWDATEID, SALEPRICE)
    SELECT SEQ_DWSALE.NEXTVAL, DC.DWCUSTID, DP.DWPRODID, SM.SALEID, SM.QTY, D1.DATEKEY, D2.DATEKEY, SM.UNITPRICE 
    FROM A2SALEMELB SM
    INNER JOIN DWCUST DC ON SM.CUSTID = DC.DWSOURCEIDMELB
    INNER JOIN DWPROD DP ON SM.PRODID = DP.DWSOURCEID
    INNER JOIN DWDATE D1 ON SM.SALEDATE = D1.DATEVALUE
    INNER JOIN DWDATE D2 ON SM.SHIPDATE = D2.DATEVALUE
    WHERE SM.ROWID NOT IN (SELECT EE.SOURCE_ROWID FROM A2ERROREVENT EE);
COMMIT;
/
/*Task 6.6 & Task 7.1*/
INSERT INTO DWSALE (DWSALEID, DWCUSTID, DWPRODID, DWSOURCEIDMELB, QTY, SALE_DWDATEID, SHIP_DWDATEID, SALEPRICE)
SELECT SEQ_DWSALE.NEXTVAL, DC.DWCUSTID, DP.DWPRODID, SM.SALEID, SM.QTY, D1.DATEKEY, D2.DATEKEY, SM.UNITPRICE 
FROM A2SALEMELB SM
INNER JOIN DWCUST DC ON SM.CUSTID = DC.DWSOURCEIDMELB
INNER JOIN DWPROD DP ON SM.PRODID = DP.DWSOURCEID
INNER JOIN DWDATE D1 ON SM.SALEDATE = D1.DATEVALUE
INNER JOIN DWDATE D2 ON (SM.SALEDATE + 2) = D2.DATEVALUE
WHERE SM.ROWID IN (SELECT EE.SOURCE_ROWID FROM A2ERROREVENT EE WHERE EE.FILTERID = 14)
AND SM.ROWID NOT IN (SELECT EE.SOURCE_ROWID FROM A2ERROREVENT EE WHERE EE.FILTERID IN (12, 13, 15));

/*Task 6.7 & Task 7.1*/
INSERT INTO DWSALE (DWSALEID, DWCUSTID, DWPRODID, DWSOURCEIDMELB, QTY, SALE_DWDATEID, SHIP_DWDATEID, SALEPRICE)
SELECT SEQ_DWSALE.NEXTVAL, DC.DWCUSTID, DP.DWPRODID, SM.SALEID, SM.QTY, D1.DATEKEY, D2.DATEKEY,
(SELECT MAX(A2SM.UNITPRICE) FROM A2SALEMELB A2SM WHERE SM.PRODID = A2SM.PRODID) AS SALEPRICE
FROM A2SALEMELB SM
INNER JOIN DWCUST DC ON SM.CUSTID = DC.DWSOURCEIDMELB
INNER JOIN DWPROD DP ON SM.PRODID = DP.DWSOURCEID
INNER JOIN DWDATE D1 ON SM.SALEDATE = D1.DATEVALUE
INNER JOIN DWDATE D2 ON SM.SHIPDATE = D2.DATEVALUE
WHERE SM.ROWID IN (SELECT EE.SOURCE_ROWID FROM A2ERROREVENT EE WHERE EE.FILTERID = 15)
AND SM.ROWID NOT IN (SELECT EE.SOURCE_ROWID FROM A2ERROREVENT EE WHERE EE.FILTERID IN (12, 13, 14));





 

